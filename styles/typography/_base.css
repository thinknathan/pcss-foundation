/* Foundation for Sites */
/* https://get.foundation */
/* Licensed under MIT Open Source */

/* @group typography-base */

/* Base Typography */
/* - - - - - - - - - - - - - - - */
/* These are styles applied to basic HTML tags, including: */
/*   - Paragraphs <p> */
/*   - Bold/italics <b> <strong> <i> <em> */
/*   - Small text <small> */
/*   - Headings <h1>-<h6> */
/*   - Anchors <a> */
/*   - Dividers <hr> */
/*   - Lists <ul> <ol> <dl> */
/*   - Blockquotes <blockquote> */
/*   - Code blocks <code> */
/*   - Abbreviations <abbr> */
/*   - Citations <cite> */
/*   - Keystrokes <kbd> */

@define-mixin foundation-typography-base {
	:root {
		/* Font family for header elements. */
		/* @type String | List */
		--zf-header-font-family: var(--zf-body-font-family, sans-serif);

		/* Font weight of headers. */
		/* @type String */
		--zf-header-font-weight: var(--zf-global-weight-normal, normal);

		/* Font style (e.g. italicized) of headers. */
		/* @type String */
		--zf-header-font-style: normal;

		/* Font stack used for elements that use monospaced type, such as code samples */
		/* @type String | List */
		--zf-font-family-monospace: Consolas, 'Liberation Mono', Courier, monospace;

		/* Color of headers. */
		/* @type Color */
		--zf-header-color: inherit;

		/* Line height of headers. */
		/* @type Number */
		--zf-header-lineheight: 1.4;

		/* Top margin of headers. */
		/* @type Number */
		--zf-header-margin-top: 0;

		/* Bottom margin of headers. */
		/* @type Number */
		--zf-header-margin-bottom: 0.5rem;

		/* Styles for headings at various screen sizes. */
		--zf-header-small-h1: 24px;
		--zf-header-small-h2: 20px;
		--zf-header-small-h3: 19px;
		--zf-header-small-h4: 18px;
		--zf-header-small-h5: 17px;
		--zf-header-small-h6: 16px;

		--zf-header-medium-h1: 48px;
		--zf-header-medium-h2: 40px;
		--zf-header-medium-h3: 31px;
		--zf-header-medium-h4: 25px;
		--zf-header-medium-h5: 20px;
		--zf-header-medium-h6: 16px;

		--zf-header-large-h1: 48px;
		--zf-header-large-h2: 40px;
		--zf-header-large-h3: 31px;
		--zf-header-large-h4: 25px;
		--zf-header-large-h5: 20px;
		--zf-header-large-h6: 16px;

		/* Text rendering method of headers. */
		/* @type String */
		--zf-header-text-rendering: optimizeLegibility;

		/* Font size of `<small>` elements. */
		/* @type Number */
		--zf-small-font-size: 80%;

		/* Color of `<small>` elements when placed inside headers. */
		/* @type Color */
		--zf-header-small-font-color: var(--zf-color-medium-gray, gray);

		/* Line height of text inside `<p>` elements. */
		/* @type Number */
		--zf-paragraph-lineheight: 1.6;

		/* Bottom margin of paragraphs. */
		/* @type Number */
		--zf-paragraph-margin-bottom: 1rem;

		/* Text rendering method for paragraph text. */
		/* @type String */
		--zf-paragraph-text-rendering: optimizeLegibility;

		/* Default color for links. */
		/* @type Color */
		--zf-anchor-color: var(--zf-color-primary, #0000ee);

		/* Default color for links on hover. */
		/* @type Color */
		--zf-anchor-color-hover: color-mix(
			in srgb,
			var(--zf-anchor-color) 86%,
			black
		);

		/* Default text decoration for links. */
		/* @type String */
		--zf-anchor-text-decoration: none;

		/* Default text decoration for links on hover. */
		/* @type String */
		--zf-anchor-text-decoration-hover: none;

		/* Maximum width of a divider. */
		/* @type Number */
		--zf-hr-width: var(--zf-global-width, unset);

		/* Default border for a divider. */
		/* @type List */
		--zf-hr-border: 1px solid var(--zf-color-medium-gray, gray);

		/* Default margin for a divider. */
		/* @type Number | List */
		/* 20px = 1.25rem */
		--zf-hr-margin: 1.25rem auto;

		/* Line height for items in a list. */
		/* @type Number */
		--zf-list-lineheight: var(--zf-paragraph-lineheight, 1.6);

		/* Bottom margin for items in a list. */
		/* @type Number */
		--zf-list-margin-bottom: var(--zf-paragraph-margin-bottom, 1rem);

		/* Bullet type to use for unordered lists (e.g., `square`, `circle`, `disc`). */
		/* @type String */
		--zf-list-style-type: disc;

		/* Positioning for bullets on unordered list items. */
		/* @type String */
		--zf-list-style-position: outside;

		/* Left (or right) margin for lists. */
		/* @type Number */
		--zf-list-side-margin: 1.25rem;

		/* Left (or right) margin for a list inside a list. */
		/* @type Number */
		--zf-list-nested-side-margin: 1.25rem;

		/* Bottom margin for `<dl>` elements. */
		/* @type Number */
		--zf-defnlist-margin-bottom: 1rem;

		/* Font weight for `<dt>` elements. */
		/* @type String */
		--zf-defnlist-term-weight: var(--zf-global-weight-bold, bold);

		/* Spacing between `<dt>` and `<dd>` elements. */
		/* @type Number */
		--zf-defnlist-term-margin-bottom: 0.3rem;

		/* Text color of `<blockquote>` elements. */
		/* @type Color */
		--zf-blockquote-color: var(--zf-color-dark-gray, gray);

		/* Padding inside a `<blockquote>` element. */
		/* @type Number | List */
		/* 9px = 0.5625rem, 20px = 1.25rem, 19px = 1.1875rem */
		--zf-blockquote-padding: 0.5625rem 1.25rem 0 1.1875rem;

		/* Side border for `<blockquote>` elements. */
		/* @type List */
		--zf-blockquote-border: 1px solid var(--zf-color-medium-gray, gray);

		/* Font family for `<kbd>` elements. */
		/* @type String | List */
		--zf-keystroke-font: var(--zf-font-family-monospace, monospace);

		/* Text color for `<kbd>` elements. */
		/* @type Color */
		--zf-keystroke-color: var(--zf-color-black, black);

		/* Background color for `<kbd>` elements. */
		/* @type Color */
		--zf-keystroke-background: var(--zf-color-light-gray, gray);

		/* Padding for `<kbd>` elements. */
		/* @type Number | List */
		/* 2px = 0.0625rem, 4px = 0.25rem */
		--zf-keystroke-padding: 0.125rem 0.25rem 0;

		/* Border radius for `<kbd>` elements. */
		/* @type Number | List */
		--zf-keystroke-radius: var(--zf-global-radius, 0);

		/* Bottom border style for `<abbr>` elements. */
		/* @type List */
		--zf-abbr-underline: 1px dotted var(--zf-color-black, black);

		/* Text color for `.cite-block` component. */
		/* @type Color */
		--zf-cite-color: var(--zf-color-dark-gray, gray);

		/* Font size for `.cite-block` component. */
		/* @type Number */
		/* 13px = 0.8125rem */
		--zf-cite-font-size: 0.8125rem;

		/* Pseudo content for `.cite-block` component. */
		/* @type String */
		--zf-cite-pseudo-content: '\2014 \0020';

		/* Text color of `.code-inline` and `.code-block` components. */
		/* @type Color */
		--zf-code-color: var(--zf-color-black, black);

		/* Font family of `.code-inline` and `.code-block` components. */
		/* @type String | List */
		--zf-code-font-family: var(--zf-font-family-monospace, monospace);

		/* Font weight of text in `.code-inline` and `.code-block` components. */
		/* @type String */
		--zf-code-font-weight: var(--zf-global-weight-normal, normal);

		/* Background color of `.code-inline` and `.code-block` components. */
		/* @type Color */
		--zf-code-background: var(--zf-color-light-gray, gray);

		/* Border around `.code-inline` and `.code-block` components. */
		/* @type List */
		--zf-code-border: 1px solid var(--zf-color-medium-gray, gray);

		/* Padding around text of the `.code-inline` component. */
		/* @type Number | List */
		/* 2px = 0.125rem, 5px = 0.3125rem, 1px = 0.0625rem */
		--zf-code-padding: 0.125rem 0.3125rem 0.0625rem;

		/* Padding around text of the `.code-block` component. */
		/* @type Number | List */
		--zf-code-block-padding: 1rem;

		/* Margin under the `.code-block` component. */
		/* @type Number */
		--zf-code-block-margin-bottom: 1.5rem;
	}

	/* Typography resets */
	div,
	dl,
	dt,
	dd,
	ul,
	ol,
	li,
	h1,
	h2,
	h3,
	h4,
	h5,
	h6,
	pre,
	form,
	p,
	blockquote,
	th,
	td {
		margin: 0;
		padding: 0;
	}

	/* Paragraphs */
	p {
		margin-bottom: var(--zf-paragraph-margin-bottom);
		font-size: inherit;
		line-height: var(--zf-paragraph-lineheight);
		text-rendering: var(--zf-paragraph-text-rendering);
	}

	/* Emphasized text */
	em,
	i {
		font-style: italic;
		line-height: inherit;
	}

	/* Strong text */
	strong,
	b {
		font-weight: var(--zf-global-weight-bold);
		line-height: inherit;
	}

	/* Small text */
	small {
		font-size: var(--zf-small-font-size);
		line-height: inherit;
	}

	/* Headings */
	h1,
	.h1,
	h2,
	.h2,
	h3,
	.h3,
	h4,
	.h4,
	h5,
	.h5,
	h6,
	.h6 {
		font-family: var(--zf-header-font-family);
		font-style: var(--zf-header-font-style);
		font-weight: var(--zf-header-font-weight);
		color: var(--zf-header-color);
		text-rendering: var(--zf-header-text-rendering);
		margin-top: var(--zf-header-margin-top);
		margin-bottom: var(--zf-header-margin-bottom);
		line-height: var(--zf-header-lineheight);

		small {
			line-height: 0;
			color: var(--zf-header-small-font-color);
		}
	}

	h1,
	.h1 {
		font-size: var(--zf-header-small-h1);
	}
	h2,
	.h2 {
		font-size: var(--zf-header-small-h2);
	}
	h3,
	.h3 {
		font-size: var(--zf-header-small-h3);
	}
	h4,
	.h4 {
		font-size: var(--zf-header-small-h4);
	}
	h5,
	.h5 {
		font-size: var(--zf-header-small-h5);
	}
	h6,
	.h6 {
		font-size: var(--zf-header-small-h6);
	}

	@media (--zf-medium) {
		h1,
		.h1 {
			font-size: var(--zf-header-medium-h1);
		}
		h2,
		.h2 {
			font-size: var(--zf-header-medium-h2);
		}
		h3,
		.h3 {
			font-size: var(--zf-header-medium-h3);
		}
		h4,
		.h4 {
			font-size: var(--zf-header-medium-h4);
		}
		h5,
		.h5 {
			font-size: var(--zf-header-medium-h5);
		}
		h6,
		.h6 {
			font-size: var(--zf-header-medium-h6);
		}
	}

	@media (--zf-large) {
		h1,
		.h1 {
			font-size: var(--zf-header-large-h1);
		}
		h2,
		.h2 {
			font-size: var(--zf-header-large-h2);
		}
		h3,
		.h3 {
			font-size: var(--zf-header-large-h3);
		}
		h4,
		.h4 {
			font-size: var(--zf-header-large-h4);
		}
		h5,
		.h5 {
			font-size: var(--zf-header-large-h5);
		}
		h6,
		.h6 {
			font-size: var(--zf-header-large-h6);
		}
	}

	/* Links */
	a {
		line-height: inherit;
		color: var(--zf-anchor-color);
		text-decoration: var(--zf-anchor-text-decoration);
		cursor: pointer;

		&:hover,
		&:focus {
			color: var(--zf-anchor-color-hover);
			text-decoration: var(--zf-anchor-text-decoration-hover);
		}

		img {
			border: 0;
		}
	}

	/* Horizontal rule */
	hr {
		clear: both;
		max-width: var(--zf-hr-width);
		height: 0;
		margin: var(--zf-hr-margin);
		border-top: 0;
		border-right: 0;
		border-bottom: var(--zf-hr-border);
		border-left: 0;
	}

	/* Lists */
	ul,
	ol,
	dl {
		margin-bottom: var(--zf-list-margin-bottom);
		list-style-position: var(--zf-list-style-position);
		line-height: var(--zf-list-lineheight);
	}

	/* List items */
	li {
		font-size: inherit;
	}

	/* Unordered lists */
	ul {
		margin-left: var(--zf-list-side-margin);
		list-style-type: var(--zf-list-style-type);
	}

	/* Ordered lists */
	ol {
		margin-left: var(--zf-list-side-margin);
	}

	/* Nested unordered/ordered lists */
	ul,
	ol {
		& & {
			margin-left: var(--zf-list-nested-side-margin);
			margin-bottom: 0;
		}
	}

	/* Definition lists */
	dl {
		margin-bottom: var(--zf-defnlist-margin-bottom);

		dt {
			margin-bottom: var(--zf-defnlist-term-margin-bottom);
			font-weight: var(--zf-defnlist-term-weight);
		}
	}

	/* Blockquotes */
	blockquote {
		margin: 0 0 var(--zf-paragraph-margin-bottom);
		padding: var(--zf-blockquote-padding);
		border-left: var(--zf-blockquote-border);

		&,
		p {
			line-height: var(--zf-paragraph-lineheight);
			color: var(--zf-blockquote-color);
		}
	}

	/* Inline Citations */
	cite {
		@mixin cite-block;
	}

	/* Abbreviations */
	abbr,
	abbr[title] {
		border-bottom: var(--zf-abbr-underline);
		cursor: help;
		text-decoration: none;
	}

	/* Figures */
	figure {
		margin: 0;
	}

	/* Code */
	code {
		@mixin code-style;
		@mixin code-inline;
	}

	/* Keystrokes */
	kbd {
		margin: 0;
		padding: var(--zf-keystroke-padding);

		background-color: var(--zf-keystroke-background);

		font-family: var(--zf-keystroke-font);
		color: var(--zf-keystroke-color);

		border-radius: var(--zf-keystroke-radius);
	}

	@mixin-content;
}
